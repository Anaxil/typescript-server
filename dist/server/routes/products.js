"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var express = require("express");
var Product = require("../model/product");
var ProductsModel = require("../model/products");
var Products = /** @class */ (function () {
    function Products() {
        this.productList = new ProductsModel.Products([
            new Product.Product(1, "Produkt 1", 1),
            new Product.Product(2, "PRodukt 12", 12),
            new Product.Product(3, "produKT 0")
        ]);
    }
    Products.routes = function () {
        var router = express.Router();
        var productsRoute = new Products();
        router.get("/products/", productsRoute.index.bind(productsRoute));
        router.get("/products/:product", productsRoute.find.bind(productsRoute));
        router.post("/products/", productsRoute.create.bind(productsRoute));
        router.post("/products/delete/:product_id", productsRoute.delete.bind(productsRoute));
        return router;
    };
    Products.prototype.index = function (req, res) {
        res.json(this.productList.list());
    };
    Products.prototype.find = function (req, res) {
        var productQuery = req.params.product;
        if (!productQuery) {
            res.status(404).send("Product not found");
            return;
        }
        var product = this.productList.find(productQuery);
        if (!product) {
            res.status(404).send("Product not found");
            return;
        }
        res.json(product);
    };
    Products.prototype.create = function (req, res) {
        var productName = req.body.product_name;
        var productQuantity = parseInt(req.body.quantity) || 0;
        if (!productName) {
            res.status(500).send("Product name not found");
            return;
        }
        res.json(this.productList.add(productName, productQuantity));
    };
    Products.prototype.delete = function (req, res) {
        var productID = parseInt(req.params.product_id);
        var wasDeleted = this.productList.delete(productID);
        if (!wasDeleted) {
            res.status(404).send("Product not found");
            return;
        }
        return res.json({ success: true });
    };
    return Products;
}());
exports.Products = Products;

//# sourceMappingURL=data:application/json;charset=utf8;base64,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LENBQUMsR0FBRyxDQUFDLFdBQVcsRUFBRSxlQUFlLENBQUMsQ0FBQyxDQUFDO0lBRWpFLENBQUM7SUFFTSx5QkFBTSxHQUFiLFVBQWMsR0FBb0IsRUFBRSxHQUFxQjtRQUNyRCxJQUFJLFNBQVMsR0FBVyxRQUFRLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUV4RCxJQUFJLFVBQVUsR0FBWSxJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUU3RCxFQUFFLENBQUEsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7WUFDYixHQUFHLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO1lBQzFDLE1BQU0sQ0FBQztRQUNYLENBQUM7UUFFRCxNQUFNLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxFQUFDLE9BQU8sRUFBRSxJQUFJLEVBQUMsQ0FBQyxDQUFDO0lBRXJDLENBQUM7SUFDTCxlQUFDO0FBQUQsQ0E1RUEsQUE0RUMsSUFBQTtBQTVFWSw0QkFBUSIsImZpbGUiOiJyb3V0ZXMvcHJvZHVjdHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBleHByZXNzIGZyb20gXCJleHByZXNzXCI7XHJcbmltcG9ydCAqIGFzIFByb2R1Y3QgZnJvbSBcIi4uL21vZGVsL3Byb2R1Y3RcIjtcclxuaW1wb3J0ICogYXMgUHJvZHVjdHNNb2RlbCBmcm9tIFwiLi4vbW9kZWwvcHJvZHVjdHNcIlxyXG5cclxuZXhwb3J0IGNsYXNzIFByb2R1Y3RzIHtcclxuXHJcbiAgICBwcml2YXRlIHA6IFByb2R1Y3QuUHJvZHVjdDtcclxuICAgIC8vIHByaXZhdGUgcHJvZHVjdExpc3Q6IEFycmF5PFByb2R1Y3QuUHJvZHVjdD4gPSBbXTtcclxuICAgIHByaXZhdGUgcHJvZHVjdExpc3Q6IFByb2R1Y3RzTW9kZWwuUHJvZHVjdHM7XHJcblxyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcblxyXG4gICAgICAgIHRoaXMucHJvZHVjdExpc3QgPSBuZXcgUHJvZHVjdHNNb2RlbC5Qcm9kdWN0cyhbXHJcbiAgICAgICAgICAgIG5ldyBQcm9kdWN0LlByb2R1Y3QoMSwgXCJQcm9kdWt0IDFcIiwgMSksXHJcbiAgICAgICAgICAgIG5ldyBQcm9kdWN0LlByb2R1Y3QoMiwgXCJQUm9kdWt0IDEyXCIsIDEyKSxcclxuICAgICAgICAgICAgbmV3IFByb2R1Y3QuUHJvZHVjdCgzLCBcInByb2R1S1QgMFwiKVxyXG4gICAgICAgIF0pO1xyXG5cclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc3RhdGljIHJvdXRlcygpOiBleHByZXNzLlJvdXRlciB7XHJcbiAgICAgICAgbGV0IHJvdXRlcjogZXhwcmVzcy5Sb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xyXG5cclxuICAgICAgICBsZXQgcHJvZHVjdHNSb3V0ZTogUHJvZHVjdHMgPSBuZXcgUHJvZHVjdHMoKVxyXG5cclxuICAgICAgICByb3V0ZXIuZ2V0KFwiL3Byb2R1Y3RzL1wiLCBwcm9kdWN0c1JvdXRlLmluZGV4LmJpbmQocHJvZHVjdHNSb3V0ZSkpO1xyXG4gICAgICAgIHJvdXRlci5nZXQoXCIvcHJvZHVjdHMvOnByb2R1Y3RcIiwgcHJvZHVjdHNSb3V0ZS5maW5kLmJpbmQocHJvZHVjdHNSb3V0ZSkpO1xyXG4gICAgICAgIHJvdXRlci5wb3N0KFwiL3Byb2R1Y3RzL1wiLCBwcm9kdWN0c1JvdXRlLmNyZWF0ZS5iaW5kKHByb2R1Y3RzUm91dGUpKTtcclxuICAgICAgICByb3V0ZXIucG9zdChcIi9wcm9kdWN0cy9kZWxldGUvOnByb2R1Y3RfaWRcIiwgcHJvZHVjdHNSb3V0ZS5kZWxldGUuYmluZChwcm9kdWN0c1JvdXRlKSk7XHJcbiAgICAgICAgcmV0dXJuIHJvdXRlcjtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgaW5kZXgocmVxOiBleHByZXNzLlJlcXVlc3QsIHJlczogZXhwcmVzcy5SZXNwb25zZSkge1xyXG4gICAgICAgIHJlcy5qc29uKHRoaXMucHJvZHVjdExpc3QubGlzdCgpKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgZmluZChyZXE6IGV4cHJlc3MuUmVxdWVzdCwgcmVzOiBleHByZXNzLlJlc3BvbnNlKSB7XHJcbiAgICAgICAgbGV0IHByb2R1Y3RRdWVyeTogc3RyaW5nID0gcmVxLnBhcmFtcy5wcm9kdWN0O1xyXG5cclxuICAgICAgICBpZiAoIXByb2R1Y3RRdWVyeSkge1xyXG4gICAgICAgICAgICByZXMuc3RhdHVzKDQwNCkuc2VuZChcIlByb2R1Y3Qgbm90IGZvdW5kXCIpO1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBsZXQgcHJvZHVjdDogUHJvZHVjdC5Qcm9kdWN0ID0gdGhpcy5wcm9kdWN0TGlzdC5maW5kKHByb2R1Y3RRdWVyeSk7XHJcblxyXG4gICAgICAgIGlmICghcHJvZHVjdCkge1xyXG4gICAgICAgICAgICByZXMuc3RhdHVzKDQwNCkuc2VuZChcIlByb2R1Y3Qgbm90IGZvdW5kXCIpO1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXMuanNvbihwcm9kdWN0KTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgY3JlYXRlKHJlcTogZXhwcmVzcy5SZXF1ZXN0LCByZXM6IGV4cHJlc3MuUmVzcG9uc2UpIHtcclxuICAgICAgICBsZXQgcHJvZHVjdE5hbWU6IHN0cmluZyA9IHJlcS5ib2R5LnByb2R1Y3RfbmFtZTtcclxuICAgICAgICBsZXQgcHJvZHVjdFF1YW50aXR5OiBudW1iZXIgPSBwYXJzZUludChyZXEuYm9keS5xdWFudGl0eSkgfHwgMDtcclxuICAgICAgICBcclxuICAgICAgICBpZiAoIXByb2R1Y3ROYW1lKSB7XHJcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoNTAwKS5zZW5kKFwiUHJvZHVjdCBuYW1lIG5vdCBmb3VuZFwiKTtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH0gICAgICAgIFxyXG5cclxuICAgICAgICByZXMuanNvbih0aGlzLnByb2R1Y3RMaXN0LmFkZChwcm9kdWN0TmFtZSwgcHJvZHVjdFF1YW50aXR5KSk7XHJcbiAgICAgICAgXHJcbiAgICB9ICAgIFxyXG5cclxuICAgIHB1YmxpYyBkZWxldGUocmVxOiBleHByZXNzLlJlcXVlc3QsIHJlczogZXhwcmVzcy5SZXNwb25zZSkge1xyXG4gICAgICAgIGxldCBwcm9kdWN0SUQ6IG51bWJlciA9IHBhcnNlSW50KHJlcS5wYXJhbXMucHJvZHVjdF9pZCk7XHJcblxyXG4gICAgICAgIGxldCB3YXNEZWxldGVkOiBCb29sZWFuID0gdGhpcy5wcm9kdWN0TGlzdC5kZWxldGUocHJvZHVjdElEKTtcclxuXHJcbiAgICAgICAgaWYoIXdhc0RlbGV0ZWQpIHtcclxuICAgICAgICAgICAgcmVzLnN0YXR1cyg0MDQpLnNlbmQoXCJQcm9kdWN0IG5vdCBmb3VuZFwiKTtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIHJlcy5qc29uKHtzdWNjZXNzOiB0cnVlfSk7XHJcblxyXG4gICAgfVxyXG59Il19
